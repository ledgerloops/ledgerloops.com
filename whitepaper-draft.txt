OpenTabs: Cross-ledger Settlements without Trust

abstract:
Debt and money transfers are typically recorded in ledgers that record the state of a number of
bank accounts or wallets. Transferring money is then only possible within the same ledger, or through
a federation protocol that forms a connection between two or more ledgers.

This whitepaper proposes a novel system for federating ledgers, called OpenTabs. Its defining feature is
that settlements can occur without transitivity of trust, and without exposing the full content of
the ledgers involved to the rest of the network.


Introduction

Ledgers for transferring money can typically be either private to the parties involved (like a piece of paper or a spreadsheet),
managed by a trusted third party (like a traditional bank),
or open and public (like the Bitcoin ledger).

Each of these ledger types have their own advantages and drawbacks. A private ledger only allows settling debts
within a closed group of participating parties.
A traditional bank needs to be trusted, will likely extract rent
from its customers' account balance, and typically needs to be backed by a trusted government in order to provide a reliable service.
An open public ledger needs to be trusted based on network consensus and community politics, and requires parties to keep their
account number secret, or deal with the side-effect of making all details about their assets and transactions public.

OpenTabs is a novel protocol for cross-ledger settlements that allows private ledgers to be federated without the need for an
additional third-party ledger or public ledger.


Motivation

Both third-party ledgers and public ledgers have disadvantages, meaning parties may choose to keep their ledgers private to only
the debtors and creditors involved. Using a private ledger avoids making sensitive information public, and avoids the risk involved
in trusting a third party like a bank, or a network community like Bitcoin or a Ripple UNL.

Cyclic Contracts

A contract  between three parties will usually contain ten important parts:
* an identifier for party A
* something party A should do
* a signature by party A
* same three things for B
* same three things for C
* a statement that all parties are happy to keep their promise, and in return for it not demand anything more than each other party keeping their ends of the deal. That's to say, an agreement that all parties involved consider the trade a fair deal.

Party A hopes that parties B and C will keep their promise, and "in return", party A will keep their own promise. Party A's signature on the document serves to convince parties B and C that party A will probably keep their promise. Of course, this hope is based on the psychology and willingness to cooperate of party A,but at least the contract gives an exact definition of whether A has played by the social rules or not. This then allows other parties to either punish party A for breach of contract, or allow parties B and C to do so.

In a cyclic three-party contract, each party only trusts one of the other two parties to uphold their promise.

In this case, party A makes a promise to party B, but is not interested in the promise party B makes. However, party C is interested in party B's promise, and is willing to make a promise that interests party A.

Party A does not have to make a global statement that they think the contract is a fair deal, just that they are happy to keep their promise to B if C keep their promise to them. The contract is only binding if all parties signed it, creating a cycle of parties promising to keep their promise if the previous party does, and even if the previous party breaks the contract, that will be handled locally and does not give the losing party the right to break the contract themselves.

Example of a cyclic contract:

DOCUMENT A1: description of Alice's offer to Bob (not binding).
Hi Bob,
Would you be interested in an apple? I would give it to you if I receive something else that is of more value to me. Maybe there's something you can offer me in return, or otherwise I would also be interested in seeing what Charlie has to offer, do you know him?
Signed,
Alice.

DOCUMENT B1: description of Bob's offer to Charlie (conditionally binding).
Hi Charlie,
Would you be interested in an orange? I would give it to you if I receive something else that is of more value to me. Maybe there's something you can offer me in return, or otherwise I would also be interested in the item Alice described to me in document A1. Do you know her?
Signed,
Bob.

DOCUMENT C1: description of Charlie's offer to Alice (conditionally binding).
Hi Alice,
Would you be interested in a banana? I would give it to you if I receive something else that is of more value to me.
Maybe there's something you can offer me in return, or otherwise I would also be interested in the item Bob described in document B1. It seems you know him, because he promised me to execute on B1 on the condition that you execute on A1. Did you send him an offer by that identifier?
Signed,
Charlie.

DOCUMENT A2:
Hi again Bob,
I heard you talked to Charlie! Great. I'll give you the apple if you can prove to me that Charlie will execute on C1.
Signed,
Alice.

DOCUMENT B2:
Hi again Charlie,
I heard you sent Alice a conditionally binding offer identified as C1; I have no idea what's in there, but Alice told me she's interested
in it, so I'll give you the orange if you bindingly promise to execute on C1.
Signed,
Bob.

DOCUMENT C2:
Hi Alice (CC: Bob),
This is document C2. I hereby bindingly and unconditionally promise to execute on C1.
I'm not doing this as a charity to you, or because I want something back from you in return, but just because I'm interested in the item which Bob (CC'ed) described in B1, and in combination with B2, this now binds Bob to execute on B1. I checked Bob's signature on both documents, so I trust that they were signed by him. I've known Bob for a while now, and I trust him on his word! :)
Signed,
Charlie.

DOCUMENT B3:
Hi Charlie (CC: Alice),
Thanks for your document C2, in which you bindingly promise to execute on C1.
I have no idea what you offered Alice there, but you're right in saying that your document C2, in combination with my B2, binds me to execute on my document B1. I agree that I'm now bound to this, and it makes me happy because that, in turn, in combination with document A2, binds Alice (CC'd) to execute on A1! I checked the signatures on documents A1 and A2, and they seem to come from Alice, whom I trust. :)
Signed,
Bob.

DOCUMENT A3:
Hi Bob (CC: Charlie),
Thanks to both of you, this is a great deal which we all benefit from.
Bob, I checked Charlie's signatures on C1 and C2, and indeed, in combination with A2, this binds me to giving you the item described in A1.
Charlie, I'm looking forward to receiving your item described in C1 and C2. I checked your signatures, and trust you to give me the item soon.
Signed,
Alice.

It took 8 messages, but now everybody knows they will receive the item they're interested in, and everybody knows they're now contractually bound to sending the item they offered.

This is the happy path, it could also be that Charlie's offer of a banana is too low for Alice, or that Alice doesn't know Charlie, or doesn't trust him to execute on his promise. The case with 4 or more participants (say Alice, Bob, Charlie and David) is similar - then, Alice knows what she has offered to Bob, and what David offered to her, but she has no idea what Bob offered to Charlie, nor what Charlie offered to David, nor even who this Charlie person is anyway (!). She only needs to know that Charlie is some person who offers something to David in return to something he receives from Bob, and that both Bob and Charlie agree on an unforgeable identifier for Charlie, so that they can both check his signature (at no point does Alice have to check a signature from Charlie, only his direct neighbors Bob and David do).

Protocol:
Provided you have a number of contacts, and which each of them you have a way to check their signatures, and you have a secure private communication channel for sending documents.

If you have something to offer, offer it to one of your contacts. Apart from the message text, include a message identifier (these strings would be long hashes instead of short strings like 'A1'), and a one-time identity (again, a long hash and not your real-life name 'Alice') which the contact can use to refer to you and to the documents you sent.
Now send that same one-time identity to your other contacts, so they know you're now also known as that identifier.

If you receive an offer, proceed as per the example above to try to help make it into a binding cyclic contract.

In the example above, the last documents are sent out with CC's, but that reveals to party A that party B and party C know each other and do business together. When using one-time identities, there's no need to reveal that. Of course, party A will known that party B and C know each other at least indirectly, but when talking to Bob, Charlie can pretend that he's not satisfying Alice's requirements himself, but that there's a David or even an Edward etc. in between them. Let's look at a more sophisticated example:

...
